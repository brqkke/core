name: Main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  tests:
    name: Run Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Run test
        run: npm test
  build-docker:
    name: Build docker image
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: butanuki
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --build-arg appVersion=${{ github.sha }} --tag ghcr.io/butanuki21/core:${{  github.sha }}
      - name: start docker
        run: |
          docker run -d --name app -p 80:80 --env-file butanuki-api/.env.development \
            -e DB_HOST=postgres \
            -e DB_NAME=postgres \
            -e DB_PASSWORD=butanuki \
            -e DB_USER=postgres \
            -e PORT=80 \
            -e USE_SSL=false  \
            ghcr.io/butanuki21/core:${{  github.sha }}
      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: wait for app to be up
        run: ci/wait-for-it.sh -h localhost -p 80
      - name: Test version
        run: curl http://localhost/api/status | grep ok || docker logs app
